/ Single Pattern 
	private static MessageDao instance;
	
	// DB 연결시  관한 변수 
	private static final String 	dbDriver	=	"oracle.jdbc.driver.OracleDriver";
	private static final String		dbUrl		=	"jdbc:oracle:thin:@127.0.0.1:1521:xe";
	private static final String		dbUser		=	"hr";
	private static final String		dbPass		=	"1234";
	
	
	
	//--------------------------------------------
	//#####	 객체 생성하는 메소드 
	public static MessageDao	getInstance() throws MessageException
	{
		if( instance == null )
		{
			instance = new MessageDao();
		}
		return instance;
	}
	
	private MessageDao() throws MessageException
	{
	
		try{
			
			/********************************************
				1. 오라클 드라이버를 로딩
					( DBCP 연결하면 삭제할 부분 )
			*/
				Class.forName(dbDriver);
		}catch( Exception ex ){
			throw new MessageException("방명록 ) DB 연결시 오류  : " + ex.toString() );	
		}
		
	}
	
	
	/*
	 * 메세지를 입력하는 함수
	 */
	public void insert(Message rec) throws MessageException
	{
		Connection con = null;
		PreparedStatement ps = null;
		try{
			//2. 연결객체 얻어오기
			con = DriverManager.getConnection(url,user,pass);
			//3. sql문장
			String sql = "INSERT INTO guestTb VALUES(seq_guestTB_messageId.nextval,?,?,?)";
			//4. 전송객체 얻어오기
			ps = con.prepareStatement(sql);
			ps.setString(1,rec.getGuestName());
			ps.setStirng(2,rec.getPassword());
			ps.setStirng(3,rec.getMessage());
			//5. 전송
			ps.executUpdate();
			
				
		}catch( Exception ex ){
			throw new MessageException("방명록 ) DB에 입력시 오류  : " + ex.toString() );	
		} finally{
			if( ps   != null ) { try{ ps.close();  } catch(SQLException ex){} }
			if( con  != null ) { try{ con.close(); } catch(SQLException ex){} }
		}
	
	}
	
	/*
	 * 메세지 목록 전체를 얻어올 때
	 */
	public List<Message> selectList() throws MessageException
	{
		Connection	 		con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		List<Message> mList = new ArrayList<Message>();
		boolean isEmpty = true;
		
		try{
			//2.연결객체 얻어오기
			con = DriverManager.getConnection(dbDriver);
			//3.sql 문장
			String sql = "SELECT * FROM guestTb";
			//4.전송객체 얻어오기
			ps = con.prepareStatement(sql);
			//5.전송
			rs = ps.executeQuery();
			//6.결과처리
			while(rs.next()){
			Message vo = new Message();
			vo.setGuestId(rs.getInt("guestId");
			vo.setGuestName(rs.getString("guestName");
			vo.setPassword(rs.getString("guestPassword");
			vo.setMessage(rs.getString("message");
			mList.add(vo);
			isEmpty return false; //위에서 내려왔는데도 객체가 없으면 false를 반환한다
			}
			if( isEmpty ) return Collections.emptyList();
			
			return mList;
		}catch( Exception ex ){
			throw new MessageException("방명록 ) DB에 목록 검색시 오류  : " + ex.toString() );	
		} finally{
			if( rs   != null ) { try{ rs.close();  } catch(SQLException ex){} }
			if( ps   != null ) { try{ ps.close();  } catch(SQLException ex){} }
			if( con  != null ) { try{ con.close(); } catch(SQLException ex){} }
		}		
	}
	